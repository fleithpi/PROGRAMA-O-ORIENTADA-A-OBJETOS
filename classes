{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOoqW4qPyBdHmh+2rAq2CNP"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":13,"metadata":{"id":"atHa2I2v2p-M","executionInfo":{"status":"ok","timestamp":1759412091571,"user_tz":180,"elapsed":6,"user":{"displayName":"Pietro Fleith","userId":"05944635742924198992"}}},"outputs":[],"source":["class Conta:\n","  def __init__(self, titular, saldo_inicial=0.0):\n","      # O construtor define os atributos iniciais\n","      self.titular = titular\n","      self.saldo = float(saldo_inicial)\n","\n","  def depositar(self, valor):\n","    if valor > 0:\n","      self.saldo += valor\n","\n","      return (f\"Depósito de R$ {valor:.2f} realizado.\")\n","    else:\n","\n","      return \"Erro: O valor do depósito deve ser positivo.\"\n","\n","  def sacar(self, valor):\n","    if valor <= 0:\n","      return \"Erro: O valor do saque deve ser positivo.\"\n","\n","    if self.saldo >= valor:\n","        self.saldo -= valor\n","\n","        return (f\"Saque de R$ {valor:.2f} realizado.\")\n","    else:\n","\n","      return (f\"Erro: Saldo insuficiente. Saldo atual R$ {self.saldo:.2f}\")\n","\n","  def exibir_saldo(self):\n","\n","     return (f\"Titular: {self.titular}  Saldo Atual: R$ {self.saldo:.2f}\")\n","\n","\n","\n","\n","\n"]},{"cell_type":"code","source":["class Pessoa1:\n","  def __init__(self, nome, idade, cpf):\n","    self.nome = nome\n","    self.idade = idade\n","    self.cpf = cpf\n","\n","  # CORREÇÃO: A f-string deve começar e terminar com aspas\n","  def __str__(self):\n","    return f\"Nome: {self.nome}, Idade: {self.idade} anos, CPF: {self.cpf}\"\n","\n","# --- Teste da Classe ---\n","# 1. Cria o OBJETO (instância) Pessoa1\n","p1 = Pessoa1(nome=\"Alice\", idade=25, cpf=\"987.654.321-00\")\n","\n","# 2. Quando você printa o objeto, o método __str__ é chamado automaticamente\n","print(p1)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P0tUimch78z1","executionInfo":{"status":"ok","timestamp":1759412091649,"user_tz":180,"elapsed":74,"user":{"displayName":"Pietro Fleith","userId":"05944635742924198992"}},"outputId":"3b8207bd-6df9-4aab-9f3e-b204a44614fe"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Nome: Alice, Idade: 25 anos, CPF: 987.654.321-00\n"]}]},{"cell_type":"code","source":["print(\"--- conta ---\")\n","\n","# 1. CRIAÇÃO DO OBJETO PESSOA (INSTÂNCIA)\n","# CORREÇÃO: Usamos o operador de ATRIBUIÇÃO (=) e o construtor da CLASSE Pessoa\n","pessoa_cliente = Pessoa1(nome=\"Carlos Souza\", idade=40, cpf=\"123.000.456-78\")\n","\n","# Captura o depósito inicial e tenta converter para float.\n","try:\n","    deposito_inicial = float(input(\"DIGITE QUANTO QUER DEPOSITAR: \"))\n","except ValueError:\n","    print(\"\\n[AVISO] Valor de depósito inicial inválido. Usando 0.\")\n","    deposito_inicial = 0.0\n","\n","# 2. Criação da conta\n","# Utilizamos o atributo 'nome' do objeto que acabamos de criar.\n","conta = Conta(pessoa_cliente.nome)\n","\n","# Realiza o depósito inicial do input\n","print(f\"Status Inicial: {conta.exibir_saldo()}\")\n","print(f\"\\n[OPERAÇÃO0 - INPUT] {conta.depositar(deposito_inicial)}\")\n","print(f\"Status Atual: {conta.exibir_saldo()}\")\n","\n","# 3. Realizando um depósito de teste (valor fixo do seu código)\n","valor_deposito = 1555.50\n","print(f\"\\n[OPERAÇÃO1] {conta.depositar(valor_deposito)}\")\n","print(f\"Status Atual: {conta.exibir_saldo()}\")\n","\n","# 4. Tentando um saque bem-sucedido\n","valor_saque_ok = 100.00\n","print(f\"\\n[OPERAÇÃO2] {conta.sacar(valor_saque_ok)}\")\n","print(f\"Status Atual: {conta.exibir_saldo()}\")\n","\n","# 5. Tentando um saque que excede o saldo\n","valor_saque_fail = 1050.00\n","print(f\"\\n[OPERAÇÃO3] {conta.sacar(valor_saque_fail)}\")\n","print(f\"Status Final: {conta.exibir_saldo()}\")\n","\n","print(\"\\n--- DADOS DO TITULAR ---\")\n","# Agora essas variáveis funcionam porque acessam o objeto 'pessoa_cliente'\n","print(conta.titular, pessoa_cliente.idade, pessoa_cliente.cpf)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Iuy4apVg2zue","executionInfo":{"status":"ok","timestamp":1759412094291,"user_tz":180,"elapsed":2644,"user":{"displayName":"Pietro Fleith","userId":"05944635742924198992"}},"outputId":"2b7497f5-4d37-4a7d-96bf-106c589e02fb"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["--- conta ---\n","DIGITE QUANTO QUER DEPOSITAR: 40\n","Status Inicial: Titular: Carlos Souza  Saldo Atual: R$ 0.00\n","\n","[OPERAÇÃO0 - INPUT] Depósito de R$ 40.00 realizado.\n","Status Atual: Titular: Carlos Souza  Saldo Atual: R$ 40.00\n","\n","[OPERAÇÃO1] Depósito de R$ 1555.50 realizado.\n","Status Atual: Titular: Carlos Souza  Saldo Atual: R$ 1595.50\n","\n","[OPERAÇÃO2] Saque de R$ 100.00 realizado.\n","Status Atual: Titular: Carlos Souza  Saldo Atual: R$ 1495.50\n","\n","[OPERAÇÃO3] Saque de R$ 1050.00 realizado.\n","Status Final: Titular: Carlos Souza  Saldo Atual: R$ 445.50\n","\n","--- DADOS DO TITULAR ---\n","Carlos Souza 40 123.000.456-78\n"]}]},{"cell_type":"code","source":["class Conta1:\n","  def __init__(self, saldo, titular):\n","    # Atributos internos (protegidos pela convenção do '_')\n","    self._titular = titular\n","    self._saldo = saldo\n","\n","  # Getter para o titular\n","  def get_titular(self):\n","    return self._titular\n","\n","  # Getter para o saldo\n","  def get_saldo(self):\n","    return self._saldo\n","\n","# --- Bloco de Execução (Fora da classe) ---\n","\n","saldo_inicial = 5000\n","nome_cliente = \"PIETRO FLEITH\"\n","\n","# 1. Criação do objeto (instância)\n","# O objeto 'conta_cliente' agora existe na memória.\n","conta_cliente = Conta1(saldo=saldo_inicial, titular=nome_cliente)\n","\n","# 2. Acessando os dados do objeto:\n","print(\"--- conta ---\")\n","\n","# Chamando o método getter no objeto 'conta_cliente'.\n","print(f\"NOME DO CLIENTE (Getter): {conta_cliente.get_titular()}\")\n","# Acessando o saldo e formatando a saída para duas casas decimais.\n","print(f\"SALDO CLIENTE: R$ {conta_cliente.get_saldo():.2f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F11oHOJfB7_I","executionInfo":{"status":"ok","timestamp":1759412094359,"user_tz":180,"elapsed":60,"user":{"displayName":"Pietro Fleith","userId":"05944635742924198992"}},"outputId":"7d164e0f-f2f1-40d3-9eec-9aabdeac10fe"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["--- conta ---\n","NOME DO CLIENTE (Getter): PIETRO FLEITH\n","SALDO CLIENTE: R$ 5000.00\n"]}]},{"cell_type":"code","source":["class Vendedor():\n","  def __init__(self, nome):\n","    self.nome = nome\n","    self.vendar = 0\n","\n","  def vendeu(self, vendas):\n","    self.vendas = vendas\n","\n","  def bateu_meta(self, meta):\n","    if self.vendas > meta:\n","      print(self.nome, \"bateu a meta\")\n","    else:\n","      print(self.nome, \"nao bateu a meta\")\n","\n","vendedor1 = Vendedor(\"Lira\")\n","vendedor1.vendeu(1000)\n","vendedor1.bateu_meta(600)\n","\n","vendedor2 = Vendedor(\"Pietro\")\n","vendedor2.vendeu(200)\n","vendedor2.bateu_meta(600)\n"],"metadata":{"id":"b3eXruQ3SeIO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1759412094370,"user_tz":180,"elapsed":6,"user":{"displayName":"Pietro Fleith","userId":"05944635742924198992"}},"outputId":"0f3311e5-4fe5-4e40-d469-1ab3d71ab8eb"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Lira bateu a meta\n","Pietro nao bateu a meta\n"]}]},{"cell_type":"code","source":["from class import Vendedor\n","\n","vendedor1 = Vendedor(\"Lira\")\n","vendedor1.vendeu(1000)\n","vendedor1.bateu_meta(600)\n","\n","vendedor2 = Vendedor(\"Pietro\")\n","vendedor2.vendeu(200)\n","vendedor2.bateu_meta(600)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":106},"id":"F-9xVzTjIETE","executionInfo":{"status":"error","timestamp":1759412140923,"user_tz":180,"elapsed":39,"user":{"displayName":"Pietro Fleith","userId":"05944635742924198992"}},"outputId":"b0af9331-1628-4060-f9fd-e686db70acdb"},"execution_count":23,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"invalid syntax (ipython-input-3198293621.py, line 1)","traceback":["\u001b[0;36m  File \u001b[0;32m\"/tmp/ipython-input-3198293621.py\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    from class import Vendedor\u001b[0m\n\u001b[0m         ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"DLAm42JtH3OA","executionInfo":{"status":"aborted","timestamp":1759412094372,"user_tz":180,"elapsed":2960,"user":{"displayName":"Pietro Fleith","userId":"05944635742924198992"}}},"execution_count":null,"outputs":[]}]}